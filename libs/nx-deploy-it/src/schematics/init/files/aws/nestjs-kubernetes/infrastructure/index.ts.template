import * as aws from '@pulumi/aws';
import * as awsx from '@pulumi/awsx';
import * as eks from '@pulumi/eks';
import * as pulumi from '@pulumi/pulumi';

const stackConfig = new pulumi.Config();
const config = {
  // ===== DONT'T TOUCH THIS -> CONFIG REQUIRED BY nx-deploy-it ======
  projectName: stackConfig.get('projectName')
  // ===== END ======
};
const projectName = config.projectName;
const stageName = pulumi.getStack().split('-')[0];
const region = aws.config.requireRegion();

// Create a VPC for our cluster.
const vpc = new awsx.ec2.Vpc(`${projectName}-vpc`, {
  numberOfAvailabilityZones: 2
});

// Create the EKS cluster itself and a deployment of the Kubernetes dashboard.
const cluster = new eks.Cluster(`${projectName}-cluster`, {
  vpcId: vpc.id,
  subnetIds: vpc.publicSubnetIds,
  instanceType: 't3.micro',
  desiredCapacity: 1,
  minSize: 1,
  maxSize: 1,
  deployDashboard: true
});

// Export the cluster's kubeconfig.
export const kubeconfig = cluster.kubeconfig;

// exports.endpoint = pulumi.interpolate`${deployment.invokeUrl}${stageName}`;
